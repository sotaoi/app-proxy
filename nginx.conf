# user  nobody;
# worker_processes 1;
worker_processes auto;

# error_log logs/error.log;
# error_log logs/error.log  notice;
# error_log logs/error.log  info;

# pid logs/nginx.pid;

error_log logs/error.log;

events {
  worker_connections 1024;
}


http {
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log logs/access.log main;

  include     nginx/mime.types;
  default_type  application/octet-stream;

  sendfile    on;
  # tcp_nopush   on;

  # keepalive_timeout  0;
  keepalive_timeout  65;

  # gzip  on;

  server {
    listen 443 ssl;
    server_name alarmion.ddns.net;

    # TLS config
    ssl_certificate    ./certs/full-ssl-certificate-bundle.pem;
    ssl_certificate_key  ./certs/privkey.pem;
    ssl_session_cache  shared:SSL:10m;
    ssl_session_timeout  5m;
    ssl_ciphers      HIGH:!aNULL:!MD5;
    ssl_protocols    TLSv1.2 TLSv1.3;

    # proxy_intercept_errors on;   # Do not send backend errors to the client

    error_page 400 = @400;
    location @400 { return 400 '{"status":400,"message":"Bad request"}\n'; }

    error_page 404 = @404;
    location @404 { return 404 '{"status":404,"message":"Item not found"}\n'; }

    error_page 502 = @502;
    location @502 { return 502 '{"status":502,"message":"Bad gateway"}\n'; }

    # default_type application/x-www-form-urlencoded
    # default_type application/json; # If no content-type then assume JSON

    location = /api {
        proxy_pass https://alarmion.ddns.net:3000;
    }
    location ~ ^/api/[^/]+$ {
        proxy_pass https://alarmion.ddns.net:3000;
    }

    location = /oauth {
        proxy_pass http://alarmion.ddns.net:4155;
    }
    location ~ ^/oauth/[^/]+$ {
        proxy_pass http://alarmion.ddns.net:4155;
    }

    location = /socket.io {
        proxy_pass https://alarmion.ddns.net:3700;
    }
    location ~ ^/socket.io/[^/]+$ {
        proxy_pass https://alarmion.ddns.net:3700;
    }

    location = / {
        proxy_pass https://alarmion.ddns.net:8080;
    }
    location ~ /[^/]+$ {
        proxy_pass https://alarmion.ddns.net:8080;
    }
  }

  server {
    listen 80 default_server;
    server_name _;

    return 302 https://$host$request_uri;
  }

  include nginx/servers/*;
}
